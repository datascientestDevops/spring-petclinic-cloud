---
apiVersion: apps/v1
kind: Deployment
metadata: #Metadata du deployement
  labels:
    app: api-gateway
  name: api-gateway
  namespace: spring-petclinic-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  strategy: {}
  template: #metadata spécifique au pod
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - image: 484497069811.dkr.ecr.eu-west-3.amazonaws.com/spring-petclinic-cloud-api-gateway:latest
        name: api-gateway
        imagePullPolicy: Always
        env: #variables d'environeement
        - name: SPRING_PROFILES_ACTIVE
          value: kubernetes,mysql
#        - name: MANAGEMENT_METRICS_EXPORT_WAVEFRONT_URI
#          value: proxy://wavefront-proxy.spring-petclinic.svc.cluster.local:2878
        ports:
        - containerPort: 8080 
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service #type 
metadata: #Configuration des metadata
  labels:
    app: api-gateway
  name: api-gateway
  namespace: spring-petclinic-dev
spec:
  ports: # Exposition des port d'entré et de sortie
  - name: "http"
    port: 8080
    targetPort: 8080
  selector:
    app: api-gateway
  type: LoadBalancer #Un service de type LoadBalancer est basé sur le service NodePort et ajoute la possibilité de configurer des équilibreurs de charge externes au sein des clouds publics et privés. Il expose les services exécutés au sein du cluster en transférant le trafic réseau vers les nœuds du cluster.
status:
  loadBalancer: {}
